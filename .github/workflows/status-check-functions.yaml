name: Status Check Functions
on: [push]

jobs:
    job-1:
        runs-on: ubuntu-latest
        timeout-minutes: 1
        steps:
            - name: Step 1
              run: sleep 90
              timeout-minutes: 1
        #since the step one will timeout after 60 secs and will thus fail, as sleep is set to 90s and thus step 1 will take more than 60 s i.e 90 s
            - name: Step 2
              id: step-2
              continue-on-error: true
              run: exit 1
    ##Exit Failure: Exit Failure is indicated by exit(1) which means the abnormal termination of the program, i.e. some error or interrupt has occurred. 
            - name: Runs on step-2 failure
              if: failure() && steps.step-2.conclusion == 'failure'
    ##You can include extra conditions for a step to run after a failure, but you must still include failure() to override the default status check of success() that is automatically applied to if conditions that don't contain a status check function.
    ##it means that by deafult for "if" conditions, success() is checked and since its a failure() cause of exit 1 in the previous step, it wont run unless you write 
    ##failure() && to override the success() condition
              run: echo 'step-2 has failed'
    
    ##A function that Returns true when any previous step of a job fails. If you have a chain of dependent jobs, failure() returns true if any ancestor job fails.
            - name: runs on failure
              if: failure()
              run: echo 'failure'
           
            - name: Runs on Success
              if: success()
    ##Returns true when all previous steps have succeeded.
    ##if any step completes without failure , it is successful by default so its not necessary to use the success function unless you have some specific trigger
              run: echo 'runs on success'
            - name: Runs Always
    ##Causes the step to always execute, and returns true, even when canceled
              if: always()
              run: echo 'always Runs' 
            - name: Runs when cancelled
              if: cancelled()
              run: echo 'Runs when cancelled'

    job-2:
        runs-on: ubuntu-latest
        needs: job-1
        if: failure()
        ##this runs if any step of job-1 fails
        steps:
            - run: echo 'job-2'
